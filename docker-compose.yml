version: "3.9"

services:
  db:
    image: mysql:8.0
    container_name: mysql-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel-backend
    command: php artisan migrate && php artisan serve --host=0.0.0.0 --port=8000
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/vendor
      - /app/storage
    environment:
      APP_ENV: local
      APP_DEBUG: "true"
      APP_KEY: base64:3JjJhlW9AjGjNX5YkvbR/kU6c686kbx3YXPFzXPwsJY=
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      QUEUE_CONNECTION: sync
    depends_on:
      - db
    networks:
      - app-network

  scheduler:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel-scheduler
    command: php artisan schedule:work
    volumes:
      - ./backend:/app
      - /app/vendor
      - /app/storage
    environment:
      APP_ENV: local
      APP_DEBUG: "true"
      APP_KEY: base64:3JjJhlW9AjGjNX5YkvbR/kU6c686kbx3YXPFzXPwsJY=
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react-frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - frontend-node-modules:/app/node_modules
    environment:
      NODE_ENV: development
      VITE_BASE_URL: http://localhost:8000
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  mysql-data:
  frontend-node-modules:

networks:
  app-network:
    driver: bridge
